#!/usr/bin/env python  
import pandas as pd 
# Load the data matrix and the list of miRNA names 
data_matrix_file = "./prueba-miR.txt"  # Replace with the path to your data matrix file 
mirna_list_file = "./lista3.txt"  # Replace with the path to your miRNA list file 
output_file = "filtered_matrix.csv"  # Output file for the filtered data matrix 
# Load the data matrix (assuming it's a tab-delimited file) 
data_matrix = pd.read_csv(data_matrix_file, delimiter='\t')  # Adjusted delimiter to '\t'
# Load the list of miRNA names, skipping the first line (header)
with open(mirna_list_file, 'r') as file: 
    next(file)  # Skip the first line (header)
    mirna_list = [line.strip() for line in file] 
# Debugging: Print the first few entries of the data matrix and miRNA list 
print("Data matrix head:") 
print(data_matrix.head()) 
print("\nMiRNA list:") 
print(mirna_list[:10])  # Print the first 10 miRNA names for verification 
# Initialize an empty DataFrame for the output matrix 
filtered_matrix = pd.DataFrame(columns=data_matrix.columns) 
# Iterate through the miRNA list and filter the data matrix 
for mirna in mirna_list: 
    if mirna in data_matrix.iloc[:, 0].values:  # Check if miRNA is in the first column 
        # Debugging: Print found miRNA and corresponding rows 
        print(f"\nFound miRNA: {mirna}") 
        filtered_matrix = pd.concat([filtered_matrix, data_matrix[data_matrix.iloc[:, 0] == mirna]], ignore_index=True) 
    else: 
        # Debugging: Print miRNA not found 
        print(f"\nMiRNA not found: {mirna}") 
        # If miRNA not found, create a row of "NA" 
        na_row = pd.DataFrame([[mirna] + ["NA"] * (len(data_matrix.columns) - 1)], columns=data_matrix.columns) 
        filtered_matrix = pd.concat([filtered_matrix, na_row], ignore_index=True) 
# Write the filtered matrix to a CSV file 
filtered_matrix.to_csv(output_file, index=False) 
print(f"\nFiltered data matrix saved to {output_file}.")
